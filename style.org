#+title: My Preferred CSS
#+PROPERTY: header-args:css :tangle style.css :results silent

CSS styles for my blog. Currently I like ~orange~ and ~blanchedalmond~, so
those colours feature heavily. Hope I'm not overdoing it!

PS: I try to exercise all the styles in [[file:style-demo.org][style-demo]].

* Define CSS variables for Colours

#+begin_src css
:root {
    --accent: blanchedalmond;
    --bg: white;
    --footnotes: gray;
    --highlight: gold;
    --main: darkorange;
    --text: black;
}
#+end_src

* Set the Scene (Fonts, Margins, Headings)

#+begin_src css
/* Tangle style.org to update this file! */

.title  {
    text-align: center;
    margin-bottom: .2em;
    font-size: 2em;
}
.subtitle {
    text-align: center;
    margin-top:0;
    color: var(--main);
    font-size: 1.6em;
}

html {
    font-family:
        Optima,
        -apple-system,
        ".SFNSText-Regular",
        "San Francisco",
        "Roboto",
        "Segoe UI",
        "Helvetica Neue",
        "Lucida Grande",
        sans-serif;
    margin: 0 0.5ch;
    background-color: var(--bg);
    color: var(--text);
    font-size: large;
}

#content {
    max-width: 100%;
    margin: 0;
}

h1, h2, h3, h4, h5, h6 {
    color: var(--main);
    font-size: 1.4em;
}

a:link {
    color: var(--main);
}
a:visited {
    color: var(--text);
    background-color: transparent;

}
a:hover {
    color: var(--text);
    background-color: var(--highlight);
}
a:active {
    color: var(--accent);
}
#+end_src

** Preamble, Postamble are parts of every page and post

#+begin_src css
#org-div-home-and-up,
#postamble {font-size: smaller}

nav {padding: 0.5ch}

#org-div-home-and-up,
#postamble p {margin: 0.5ch 0}

#org-div-home-and-up,
#postamble,
.drawer {
    background-color: var(--accent);
    border-radius: 1px;
    padding: 0.5ch 0;
}

#org-div-home-and-up {
    border-bottom: 3px solid var(--main);
    margin-top: 0.5ch;
    padding: 0 0.5ch;
}

#postamble {
    border-top: 3px solid var(--main);
    margin-bottom: 1ch;
    padding: 0 0.5ch;
}

.drawer {
    border-top: 1px solid var(--main);
    border-bottom: 1px solid var(--main);
    background-color: var(--accent);
    padding: 0.5ch;
}
#+end_src

* Tables

Most of this is straight out of Org's default CSS, but I like me some
borders!

#+begin_src css
table {border-collapse:collapse}
td,
th {
    vertical-align:top;
    padding: 0 0.5em;
}
th.org-right  {text-align: center}
th.org-left   {text-align: center}
th.org-center {text-align: center}
td.org-right  {text-align: right}
td.org-left   {text-align: left}
td.org-center {text-align: center}
td + td,
th + th {
    border-left: 1px solid var(--main);
}
thead + tbody,
tbody + tbody {border-top: 1px solid var(--main)}
#+end_src

* Drawers

I style these like pre-/postamble, but add a heading.
[[https://pavpanchekha.com/blog/org-mode-publish.html][Credit]].

#+begin_src css
.drawer h6 {
    font-size: 100%;
    margin: 1em 0;
}
#+end_src

* Tags

My index page has tags to classify posts. This makes them look snazzy,
I think. [[https://gongzhitaao.org/orgcss/][Credit]].

#+begin_src css
.tag {
    font-family: monospace;
    padding: 0;
    font-size: 80%;
    font-weight: normal;
}

.tag span {
    background-clip:padding-box;
    background-color: var(--accent);
    border-top: 1px solid var(--main);
    border-bottom: 1px solid var(--main);
    border-radius: 1px;
    color: var(--text);
    float:right;
    line-height:1;
    margin-left:.5em;
    padding:.3em;
}
#+end_src

* Styling source code

By setting ~(setq org-html-htmlize-output-type "css")~ Org will publish
source code markup with semantic CSS selectors rather than inline CSS.
This allows us to get nice-looking output even when Emacs is
publishing in ~--batch~ mode.

#+begin_src css
.org-builtin {color: #483d8b}
.org-clojure-keyword {color: #008b8b}
.org-comment {color: #b22222}
.org-comment-delimiter {color: #b22222}
.org-doc {color: #8b2252}
.org-function-name {color: #0000ff}
.org-keyword {color: #a020f0}
.org-string {color: #8b2252}
.org-type {color: #228b22}
.org-variable-name {color: #a0522d}
#+end_src

When asking Org to number source code examples it uses these classes.

#+begin_src css
.linenr {font-size: smaller}
.code-highlighted {background-color: var(--highlight)}
#+end_src

* Footnotes in HTML

These get a diminutive orange ~<hr/>~ above, and have slightly lighter
font colour to make them stand out less.

#+begin_src css
.footpara {display: inline}
.footdef {margin-bottom: 1em}

#footnotes {
    color: var(--footnotes);
    font-size: smaller;
}

#footnotes hr {
    border: 0;
    border-top: 1px solid var(--main);
    border-radius: 1px;
    width: 50%;
}
#+end_src

* Figures, Captions, Images

Captions near figures and listings need a bit more spacing, IMO.

#+begin_src css
figure {
    margin: 0;
    text-align: center
}

caption.t-above {
    caption-side: top;
    padding: 0.5ch;
}
caption.t-bottom {caption-side: bottom}

img {max-width: 100%}
#+end_src

* Checkboxes

#+begin_src css
.off > code { font-family: monospace; color: red; }
.on > code { font-family: monospace; color: green; }
.trans > code { font-family: monospace; color: orange; }
#+end_src

* Blockquote

#+begin_src css
blockquote {
    margin: 0.5em;
    padding: 0 0.5em;
    border-left: 3px dotted var(--main);
    font-size: 1.2em;
    color: #555;
}
#+end_src

* Pre

#+begin_src css
pre {
    border: 1px solid var(--main);
    font-family: monospace;
    overflow: auto;
    padding: 0.3em 0.1em;
}
pre.src {
    position: relative;
    overflow: visible;
}
pre.src:before {
    display: none;
    position: absolute;
    background-color: var(--accent);
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid var(--main);
}

pre.src:hover:before { display: inline;}

pre.src-C:before { content: 'C'; }
pre.src-awk:before { content: 'Awk'; }
pre.src-bash:before  { content: 'bash'; }
pre.src-calc:before { content: 'Emacs Calc'; }
pre.src-clojure:before { content: 'Clojure'; }
pre.src-conf:before { content: 'Configuration File'; }
pre.src-css:before { content: 'CSS'; }
pre.src-ditaa:before { content: 'ditaa'; }
pre.src-dot:before { content: 'Graphviz'; }
pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
pre.src-gnuplot:before { content: 'gnuplot'; }
pre.src-html:before { content: 'HTML'; }
pre.src-java:before { content: 'Java'; }
pre.src-js:before { content: 'Javascript'; }
pre.src-latex:before { content: 'LaTeX'; }
pre.src-lilypond:before { content: 'Lilypond'; }
pre.src-lisp:before { content: 'Lisp'; }
pre.src-makefile:before { content: 'Makefile'; }
pre.src-objc:before { content: 'Objective-C';}
pre.src-org:before { content: 'Org mode'; }
pre.src-perl:before { content: 'Perl'; }
pre.src-plantuml:before { content: 'Plantuml'; }
pre.src-python:before { content: 'Python'; }
pre.src-scala:before { content: 'Scala'; }
pre.src-sed:before { content: 'Sed'; }
pre.src-sh:before { content: 'shell'; }
pre.src-shell:before { content: 'Shell Script'; }
pre.src-sql:before { content: 'SQL'; }
#+end_src

* Equations

#+begin_src css
.equation-container {
    display: table;
    text-align: center;
    width: 100%;
}
.equation {
    vertical-align: middle;
}
.equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
}
#+end_src

* Misc default styles from Org's default set

#+begin_src css
.todo       { font-family: monospace; color: red; }
.done       { font-family: monospace; color: green; }
.priority   { font-family: monospace; color: orange; }
.org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
.org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
.org-center { margin-left: auto; margin-right: auto; text-align: center; }
.underline  { text-decoration: underline; }
p.verse     { margin-left: 3%; }
dt          { font-weight: bold; }
#+end_src

* Cater for bigger screens

I target small screens by default, but here I make allowances for
larger screens.

Increase the body's font size, and limit its width. Center the body by
automatically adjusting margins surrounding it.

Introduce small margin & padding around figures, which looks a bit
nicer on big screens. Particularly when used in a columnar layout,
which we also activate here.

#+begin_src css
@media (min-width: 600px) {
    html {font-size: x-large}

    #content {
        max-width: 65ch;
        margin: auto;
    }

    h1, h2, h3 { font-size: 1.8em }

    .title { font-size: 3em }

    figure {
        margin: 1ch;
        padding: 1ch;
    }

    .row {display: flex}
    .column {flex: 50%}

    blockquote {
        margin: 0 1em;
	padding: 0.5em;
	font-size: 1.4em;
    }
}
#+end_src
